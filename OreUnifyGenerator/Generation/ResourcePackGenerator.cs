using OreUnifyGenerator.Model.ModSetting;
using OreUnifyGenerator.Model.Texture;
using OreUnifyGenerator.Properties;
using OreUnifyGenerator.Util;
using System;
using System.Collections.Generic;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OreUnifyGenerator.Generation
{
	public class ResourcePackGenerator : IResourcePackGenerator
	{
		private const string ResourcePackName = "OreUnify";

		private readonly ITextureProviderSystemAndUser textureProvider;
		private readonly IModSetting setting;

		public ResourcePackGenerator(ITextureProviderSystemAndUser textureProvider, IModSetting setting)
		{
			this.textureProvider = textureProvider;
			this.setting = setting;
		}

		private void organizeModTextures(string respackPath, string mod)
		{
			foreach(var entry in setting.Enumerate(mod)) {
				string src = textureProvider.GetTexturePathToOpen(entry.Category, entry.Feature);
				string dest = Path.Combine(respackPath, "assets", entry.TexturePath + ".png");
				// TODO: この辺にロガーを入れたい
				FileUtil.CopyOverwrite(src, dest);
			}
		}

		private void organizeModsTextures(string respackPath, IEnumerable<string> supportMods)
		{
			foreach(string mod in supportMods) {
				organizeModTextures(respackPath, mod);
			}
		}

		private void generatePackMeta(string respackPath)
		{
			string packmetaFile = Path.Combine(respackPath, "pack.mcmeta");
			using (var writer = new StreamWriter(packmetaFile, false, Encoding.UTF8)) {
				writer.WriteLine("{");
				writer.WriteLine("  \"pack\": {");
				writer.WriteLine("    \"pack_format\": 1,");
				writer.WriteLine($"    \"description\": \"Unify ore texture.  by yuma140902; Generated by {Program.Name} v{Program.Version}  {DateTime.Now:yyyy/MM/dd HH:mm:ss}\"");
				writer.WriteLine("  }");
				writer.WriteLine("}");
			}

			string packIcon = Path.Combine(respackPath, "pack.png");
			Resources.respack_icon.Save(packIcon, ImageFormat.Png);
		}

		public void generate(string outputPath, IEnumerable<string> supportMods)
		{
			string respackPath = Path.Combine(outputPath, ResourcePackName);
			DirectoryUtil.Create(respackPath);

			organizeModsTextures(respackPath, supportMods);
			generatePackMeta(respackPath);
		}
	}
}
